'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    donutArcClassNames: function() {
        return donutArcClassNames;
    },
    useArcStyles: function() {
        return useArcStyles;
    }
});
const _react = require("@griffel/react");
const _reacttheme = require("@fluentui/react-theme");
const _utilities = require("../../../utilities/utilities");
const donutArcClassNames = {
    root: 'fui-donut-arc__root',
    focusRing: 'fui-donut-arc__focusRing',
    arcLabel: 'fui-donut-arc__arcLabel'
};
/**
 * Base Styles
 */ const useStyles = (0, _react.makeStyles)({
    root: {
        cursor: 'default',
        outline: 'transparent',
        stroke: _reacttheme.tokens.colorNeutralBackground1,
        '& selectors': {
            '::-moz-focus-inner': {
                ..._react.shorthands.border('0')
            }
        }
    },
    focusRing: {
        stroke: _reacttheme.tokens.colorStrokeFocus2,
        strokeWidth: _reacttheme.tokens.strokeWidthThickest,
        fill: 'transparent'
    },
    arcLabel: {
        ..._reacttheme.typographyStyles.caption1Strong,
        fill: _reacttheme.tokens.colorNeutralForeground1,
        [_utilities.HighContrastSelector]: {
            stroke: 'CanvasText'
        }
    }
});
const useArcStyles = (props)=>{
    var _props_styles, _props_styles1, _props_styles2;
    const { className } = props;
    const baseStyles = useStyles();
    return {
        root: (0, _react.mergeClasses)(donutArcClassNames.root, baseStyles.root, className, (_props_styles = props.styles) === null || _props_styles === void 0 ? void 0 : _props_styles.root),
        focusRing: (0, _react.mergeClasses)(donutArcClassNames.focusRing, baseStyles.focusRing, (_props_styles1 = props.styles) === null || _props_styles1 === void 0 ? void 0 : _props_styles1.focusRing),
        arcLabel: (0, _react.mergeClasses)(donutArcClassNames.arcLabel, baseStyles.arcLabel, (_props_styles2 = props.styles) === null || _props_styles2 === void 0 ? void 0 : _props_styles2.arcLabel)
    };
};
