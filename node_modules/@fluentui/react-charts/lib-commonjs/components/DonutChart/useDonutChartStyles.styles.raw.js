'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    donutClassNames: function() {
        return donutClassNames;
    },
    useDonutChartStyles: function() {
        return useDonutChartStyles;
    }
});
const _react = require("@griffel/react");
const _reacttheme = require("@fluentui/react-theme");
const _index = require("../../utilities/index");
const donutClassNames = {
    root: 'fui-donut__root',
    chart: 'fui-donut__chart',
    legendContainer: 'fui-donut__legendContainer',
    chartWrapper: 'fui-donut__chartWrapper',
    axisAnnotation: 'fui-donut__axisAnnotation'
};
/**
 * Base Styles
 */ const useStyles = (0, _react.makeStyles)({
    root: {
        // alignItems: 'center',
        ..._reacttheme.typographyStyles.body1,
        display: 'flex',
        flexDirection: 'column',
        width: '100%',
        height: '100%'
    },
    chart: {
        boxSizing: 'content-box',
        alignmentAdjust: 'center',
        display: 'block',
        overflow: 'visible'
    },
    legendContainer: {
        paddingTop: _reacttheme.tokens.spacingVerticalL,
        width: '100%'
    },
    axisAnnotation: (0, _index.getAxisTitleStyle)()
});
const useDonutChartStyles = (props)=>{
    var _props_styles, _props_styles1, _props_styles2, _props_styles3, _props_styles4;
    const { className } = props;
    const baseStyles = useStyles();
    return {
        root: (0, _react.mergeClasses)(donutClassNames.root, baseStyles.root, className, (_props_styles = props.styles) === null || _props_styles === void 0 ? void 0 : _props_styles.root),
        chart: (0, _react.mergeClasses)(donutClassNames.chart, baseStyles.chart, (_props_styles1 = props.styles) === null || _props_styles1 === void 0 ? void 0 : _props_styles1.chart),
        legendContainer: (0, _react.mergeClasses)(donutClassNames.legendContainer, baseStyles.legendContainer, (_props_styles2 = props.styles) === null || _props_styles2 === void 0 ? void 0 : _props_styles2.legendContainer),
        chartWrapper: (0, _react.mergeClasses)(donutClassNames.chartWrapper, (_props_styles3 = props.styles) === null || _props_styles3 === void 0 ? void 0 : _props_styles3.chartWrapper),
        axisAnnotation: (0, _react.mergeClasses)(donutClassNames.axisAnnotation, baseStyles.axisAnnotation, (_props_styles4 = props.styles) === null || _props_styles4 === void 0 ? void 0 : _props_styles4.axisAnnotation)
    };
};
