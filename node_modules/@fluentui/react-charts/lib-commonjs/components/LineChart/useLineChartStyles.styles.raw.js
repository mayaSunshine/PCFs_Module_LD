'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    linechartClassNames: function() {
        return linechartClassNames;
    },
    useLineChartStyles: function() {
        return useLineChartStyles;
    }
});
const _react = require("@griffel/react");
const _reacttheme = require("@fluentui/react-theme");
const _index = require("../../utilities/index");
const linechartClassNames = {
    tooltip: 'fui-line__tooltip',
    lineBorder: 'fui-line_lineBorder',
    markerLabel: 'fui-line__markerLabel',
    root: 'fui-line__root',
    xAxis: 'fui-line__xAxis',
    yAxis: 'fui-line__yAxis',
    legendContainer: 'fui-line__legendContainer',
    hover: 'fui-line__hover',
    descriptionMessage: 'fui-line__descriptionMessage',
    axisTitle: 'fui-line__axisTitle',
    chartTitle: 'fui-line__chartTitle',
    opacityChangeOnHover: 'fui-line__opacityChangeOnHover',
    shapeStyles: 'fui-line__shapeStyles',
    chartWrapper: 'fui-line__chartWrapper',
    svgTooltip: '',
    chart: '',
    axisAnnotation: ''
};
/**
 * Base Styles
 */ const useStyles = (0, _react.makeStyles)({
    tooltip: (0, _index.getTooltipStyle)(),
    markerLabel: (0, _index.getMarkerLabelStyle)(),
    lineBorder: {
        stroke: _reacttheme.tokens.colorNeutralBackground1,
        [_index.HighContrastSelector]: {
            stroke: 'Canvas'
        }
    }
});
const useLineChartStyles = (props)=>{
    const baseStyles = useStyles();
    return {
        tooltip: (0, _react.mergeClasses)(linechartClassNames.tooltip, baseStyles.tooltip /*props.styles?.tooltip*/ ),
        lineBorder: (0, _react.mergeClasses)(linechartClassNames.lineBorder, baseStyles.lineBorder /*props.styles?.lineBorder*/ ),
        markerLabel: (0, _react.mergeClasses)(linechartClassNames.markerLabel, baseStyles.markerLabel /*props.styles?.markerLabel*/ )
    };
};
