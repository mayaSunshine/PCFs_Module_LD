'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Textbox", {
    enumerable: true,
    get: function() {
        return Textbox;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _react = /*#__PURE__*/ _interop_require_wildcard._(require("react"));
const _d3selection = require("d3-selection");
const _utilities = require("../../../utilities/utilities");
const Textbox = (props)=>{
    const textElementRef = _react.useRef(null);
    const wrapWords = ()=>{
        if (!textElementRef.current) {
            return;
        }
        const text = (0, _d3selection.select)(textElementRef.current);
        const words = props.text.split(/\s+/);
        let line = [];
        let tspan = text.append('tspan');
        let numLines = 0;
        words.forEach((word)=>{
            line.push(word);
            tspan.text(line.join(' '));
            const node = tspan.node();
            if (node && node.getComputedTextLength() > props.width && line.length > 1) {
                numLines++;
                line.pop();
                tspan.text(line.join(' '));
                line = [
                    word
                ];
                tspan = text.append('tspan').text(word).attr('dy', props.lineHeight).attr('x', props.x);
            }
        });
        // bottom aligns text
        text.attr('dy', -numLines * props.lineHeight);
        return ()=>{
            text.selectAll('tspan').remove();
        };
    };
    _react.useEffect(wrapWords);
    const { lineHeight, ...rest } = props;
    return /*#__PURE__*/ _react.createElement("text", {
        ref: textElementRef,
        ...(0, _utilities.getSecureProps)(rest)
    });
};
