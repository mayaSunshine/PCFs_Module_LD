'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    chartTableClassNames: function() {
        return chartTableClassNames;
    },
    useChartTableStyles: function() {
        return useChartTableStyles;
    }
});
const _react = require("@griffel/react");
const _reacttheme = require("@fluentui/react-theme");
const chartTableClassNames = {
    root: 'fui-ChartTable__root',
    table: 'fui-ChartTable__table',
    headerCell: 'fui-ChartTable__headerCell',
    bodyCell: 'fui-ChartTable__bodyCell',
    chart: 'fui-ChartTable__chart'
};
const useStyles = (0, _react.makeStyles)({
    root: {
        width: '100%',
        overflowX: 'auto'
    },
    table: {
        borderCollapse: 'collapse'
    },
    headerCell: {
        ..._reacttheme.typographyStyles.caption1,
        fontWeight: _reacttheme.tokens.fontWeightSemibold,
        backgroundColor: _reacttheme.tokens.colorNeutralBackground3,
        color: 'black',
        ..._react.shorthands.padding(_reacttheme.tokens.spacingHorizontalS),
        textAlign: 'left',
        ..._react.shorthands.border(_reacttheme.tokens.strokeWidthThick, 'solid', _reacttheme.tokens.colorNeutralStroke2),
        '@media (forced-colors: active)': {
            backgroundColor: 'Window',
            color: 'WindowText'
        }
    },
    bodyCell: {
        ..._reacttheme.typographyStyles.caption1,
        ..._react.shorthands.padding(_reacttheme.tokens.spacingHorizontalS),
        ..._react.shorthands.border(_reacttheme.tokens.strokeWidthThick, 'solid', _reacttheme.tokens.colorNeutralStroke2),
        color: 'black',
        textAlign: 'left',
        '@media (forced-colors: active)': {
            color: 'WindowText'
        }
    }
});
const useChartTableStyles = (props)=>{
    const baseStyles = useStyles();
    return {
        root: (0, _react.mergeClasses)(chartTableClassNames.root, baseStyles.root /*props.styles?.root*/ ),
        table: (0, _react.mergeClasses)(chartTableClassNames.table, baseStyles.table /*props.styles?.table*/ ),
        headerCell: (0, _react.mergeClasses)(chartTableClassNames.headerCell, baseStyles.headerCell /*props.styles?.headerCell*/ ),
        bodyCell: (0, _react.mergeClasses)(chartTableClassNames.bodyCell, baseStyles.bodyCell /*props.styles?.bodyCell*/ ),
        chart: (0, _react.mergeClasses)(chartTableClassNames.chart /*props.styles?.chart*/ )
    };
};
