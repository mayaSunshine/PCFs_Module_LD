'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    useVerticalStackedBarChartStyles: function() {
        return useVerticalStackedBarChartStyles;
    },
    verticalstackedbarchartClassNames: function() {
        return verticalstackedbarchartClassNames;
    }
});
const _react = require("@griffel/react");
const _index = require("../../utilities/index");
const verticalstackedbarchartClassNames = {
    opacityChangeOnHover: 'fui-vsbc__opacityChangeOnHover',
    tooltip: 'fui-vsbc__tooltip',
    barLabel: 'fui-vsbc__barLabel',
    root: '',
    xAxis: '',
    yAxis: '',
    legendContainer: '',
    hover: '',
    descriptionMessage: '',
    axisTitle: '',
    chartTitle: '',
    shapeStyles: '',
    chartWrapper: '',
    svgTooltip: '',
    chart: '',
    axisAnnotation: ''
};
const useStyles = (0, _react.makeStyles)({
    opacityChangeOnHover: {
        cursor: 'default'
    },
    tooltip: (0, _index.getTooltipStyle)(),
    barLabel: (0, _index.getBarLabelStyle)()
});
const useVerticalStackedBarChartStyles = (props)=>{
    const baseStyles = useStyles();
    return {
        opacityChangeOnHover: (0, _react.mergeClasses)(verticalstackedbarchartClassNames.opacityChangeOnHover, baseStyles.opacityChangeOnHover, props.href ? 'pointer' : 'default'),
        tooltip: (0, _react.mergeClasses)(verticalstackedbarchartClassNames.tooltip, baseStyles.tooltip),
        barLabel: (0, _react.mergeClasses)(verticalstackedbarchartClassNames.barLabel, baseStyles.barLabel)
    };
};
