'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    hbcWithAxisClassNames: function() {
        return hbcWithAxisClassNames;
    },
    useHorizontalBarChartWithAxisStyles: function() {
        return useHorizontalBarChartWithAxisStyles;
    }
});
const _react = require("@griffel/react");
const hbcWithAxisClassNames = {
    opacityChangeOnHover: 'fui-hbcwa__opacityChangeOnHover',
    xAxisTicks: 'fui-hbcwa__xAxisTicks',
    tooltip: 'fui-hbcwa__tooltip',
    chartLabel: '',
    xAxisDomain: '',
    xAxisText: '',
    yAxisDomain: '',
    yAxisTicks: '',
    yAxisText: '',
    root: '',
    xAxis: '',
    yAxis: '',
    legendContainer: '',
    hover: '',
    descriptionMessage: '',
    axisTitle: '',
    chartTitle: '',
    shapeStyles: '',
    chartWrapper: '',
    svgTooltip: '',
    chart: '',
    axisAnnotation: ''
};
const useStyles = (0, _react.makeStyles)({
    opacityChangeOnHover: {
        opacity: 0.1
    },
    xAxisTicks: {}
});
const useHorizontalBarChartWithAxisStyles = (props)=>{
    const baseStyles = useStyles();
    return {
        opacityChangeOnHover: (0, _react.mergeClasses)(hbcWithAxisClassNames.opacityChangeOnHover, baseStyles.opacityChangeOnHover),
        xAxisTicks: (0, _react.mergeClasses)(hbcWithAxisClassNames.xAxisTicks, baseStyles.xAxisTicks)
    };
};
