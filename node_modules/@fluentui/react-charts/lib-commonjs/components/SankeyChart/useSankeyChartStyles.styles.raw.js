'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    sankeyChartClassNames: function() {
        return sankeyChartClassNames;
    },
    useSankeyChartStyles: function() {
        return useSankeyChartStyles;
    }
});
const _react = require("@griffel/react");
const _reacttheme = require("@fluentui/react-theme");
const _index = require("../../utilities/index");
const sankeyChartClassNames = {
    root: 'fui-sc__root',
    nodes: 'fui-sc__nodes',
    links: 'fui-sc__links',
    nodeTextContainer: 'fui-sc__nodeTextContainer',
    toolTip: 'fui-sc__toolTip',
    chartWrapper: 'fui-sc__chartWrapper',
    chart: 'fui-sc__chart'
};
const useStyles = (0, _react.makeStyles)({
    root: {
        ..._reacttheme.typographyStyles.body1,
        display: 'flex',
        width: '100%',
        height: '100%',
        flexDirection: 'column',
        overflow: 'hidden'
    },
    links: {
        fill: _reacttheme.tokens.colorNeutralBackground1,
        strokeWidth: '3px',
        [_index.HighContrastSelector]: {
            fill: 'Canvas'
        }
    },
    nodes: {
        fill: '#F5F5F5',
        [_index.HighContrastSelector]: {
            fill: 'Canvas'
        }
    },
    toolTip: (0, _index.getTooltipStyle)(),
    nodeTextContainer: {
        '& text': {
            [_index.HighContrastSelector]: {
                fill: 'CanvasText'
            }
        },
        marginTop: '4px',
        marginLeft: '8px',
        marginBottom: '4px',
        marginRight: '8px'
    },
    chartWrapper: {
        overflow: 'auto'
    },
    chart: {
        display: 'block'
    }
});
const useSankeyChartStyles = (props)=>{
    var _props_styles, _props_reflowProps, _props_styles1, _props_styles2;
    const baseStyles = useStyles();
    return {
        root: (0, _react.mergeClasses)(sankeyChartClassNames.root, baseStyles.root, (_props_styles = props.styles) === null || _props_styles === void 0 ? void 0 : _props_styles.root),
        nodes: (0, _react.mergeClasses)(sankeyChartClassNames.nodes, baseStyles.nodes /*, props.styles?.nodes*/ ),
        links: (0, _react.mergeClasses)(sankeyChartClassNames.links, baseStyles.links /*, props.styles?.links*/ ),
        nodeTextContainer: (0, _react.mergeClasses)(sankeyChartClassNames.nodeTextContainer, baseStyles.nodeTextContainer /*, props.styles?.nodeTextContainer*/ ),
        toolTip: (0, _react.mergeClasses)(sankeyChartClassNames.toolTip, baseStyles.toolTip /*, props.styles?.toolTip*/ ),
        chartWrapper: (0, _react.mergeClasses)(sankeyChartClassNames.chartWrapper, ((_props_reflowProps = props.reflowProps) === null || _props_reflowProps === void 0 ? void 0 : _props_reflowProps.mode) === 'min-width' ? baseStyles.chartWrapper : '', (_props_styles1 = props.styles) === null || _props_styles1 === void 0 ? void 0 : _props_styles1.chartWrapper),
        chart: (0, _react.mergeClasses)(sankeyChartClassNames.chart, baseStyles.chart, (_props_styles2 = props.styles) === null || _props_styles2 === void 0 ? void 0 : _props_styles2.chart)
    };
};
