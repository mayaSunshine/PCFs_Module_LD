'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    scatterChartClassNames: function() {
        return scatterChartClassNames;
    },
    useScatterChartStyles: function() {
        return useScatterChartStyles;
    }
});
const _react = require("@griffel/react");
const _index = require("../../utilities/index");
const scatterChartClassNames = {
    tooltip: 'fui-line__tooltip',
    markerLabel: 'fui-line__markerLabel',
    root: 'fui-line__root',
    xAxis: 'fui-line__xAxis',
    yAxis: 'fui-line__yAxis',
    legendContainer: 'fui-line__legendContainer',
    hover: 'fui-line__hover',
    descriptionMessage: 'fui-line__descriptionMessage',
    axisTitle: 'fui-line__axisTitle',
    chartTitle: 'fui-line__chartTitle',
    opacityChangeOnHover: 'fui-line__opacityChangeOnHover',
    shapeStyles: 'fui-line__shapeStyles',
    chartWrapper: 'fui-line__chartWrapper',
    svgTooltip: '',
    chart: '',
    axisAnnotation: ''
};
/**
 * Base Styles
 */ const useStyles = (0, _react.makeStyles)({
    tooltip: (0, _index.getTooltipStyle)(),
    markerLabel: (0, _index.getMarkerLabelStyle)()
});
const useScatterChartStyles = (props)=>{
    var _props_styles;
    const baseStyles = useStyles();
    return {
        tooltip: (0, _react.mergeClasses)(scatterChartClassNames.tooltip, baseStyles.tooltip /*props.styles?.tooltip*/ ),
        markerLabel: (0, _react.mergeClasses)(scatterChartClassNames.markerLabel, baseStyles.markerLabel, (_props_styles = props.styles) === null || _props_styles === void 0 ? void 0 : _props_styles.markerLabel)
    };
};
