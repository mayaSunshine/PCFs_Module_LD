"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getAxisTitleStyle: function() {
        return getAxisTitleStyle;
    },
    getBarLabelStyle: function() {
        return getBarLabelStyle;
    },
    getMarkerLabelStyle: function() {
        return getMarkerLabelStyle;
    },
    getTooltipStyle: function() {
        return getTooltipStyle;
    }
});
const _utilities = require("../utilities/utilities");
const _reacttheme = require("@fluentui/react-theme");
const _react = require("@griffel/react");
const getTooltipStyle = ()=>{
    return {
        ..._reacttheme.typographyStyles.body1,
        display: 'flex',
        flexDirection: 'column',
        ..._react.shorthands.padding(_reacttheme.tokens.spacingHorizontalS),
        position: 'absolute',
        textAlign: 'center',
        top: _reacttheme.tokens.spacingVerticalNone,
        backgroundColor: _reacttheme.tokens.colorNeutralBackground1,
        borderRadius: _reacttheme.tokens.borderRadiusSmall,
        pointerEvents: 'none',
        color: _reacttheme.tokens.colorNeutralForeground1
    };
};
const getAxisTitleStyle = ()=>{
    return {
        ..._reacttheme.typographyStyles.caption2Strong,
        fontStyle: 'normal',
        textAlign: 'center',
        color: _reacttheme.tokens.colorNeutralForeground2,
        fill: _reacttheme.tokens.colorNeutralForeground1,
        [_utilities.HighContrastSelector]: {
            fill: 'CanvasText'
        }
    };
};
const getBarLabelStyle = ()=>{
    return {
        ..._reacttheme.typographyStyles.caption1Strong,
        fill: _reacttheme.tokens.colorNeutralForeground1,
        forcedColorAdjust: 'auto'
    };
};
const getMarkerLabelStyle = ()=>{
    return {
        ..._reacttheme.typographyStyles.body1,
        fill: _reacttheme.tokens.colorNeutralForeground1,
        textAnchor: 'middle',
        [_utilities.HighContrastSelector]: {
            fill: 'CanvasText'
        }
    };
};
