{"version":3,"sources":["../src/utilities/FocusableTooltipText.tsx"],"sourcesContent":["'use client';\n\n/* eslint-disable no-restricted-globals */\nimport * as React from 'react';\nimport { useCallback, useState, useEffect, useRef } from 'react';\nimport { Tooltip } from '@fluentui/react-tooltip';\nimport type { JSXElement } from '@fluentui/react-utilities';\nimport { hasOverflow } from './overflow-utils';\nimport { getAccessibleDataObject } from './index';\nimport { AccessibilityProps } from '../types/index';\nimport { Async } from './async-utils';\n\ninterface IFocusableTooltipTextProps {\n  className?: string;\n  content:\n    | string\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    | JSXElement\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    | JSXElement[];\n  accessibilityData?: AccessibilityProps;\n}\n\nexport const FocusableTooltipText: React.FunctionComponent<IFocusableTooltipTextProps> = React.forwardRef<\n  HTMLDivElement,\n  IFocusableTooltipTextProps\n>((props, forwardedRef) => {\n  const [textOverflow, setTextOverflow] = useState(false);\n  const tooltipChild = useRef<HTMLSpanElement>(null);\n  const async = useRef(new Async()).current;\n  const resizeObserver = useRef<ResizeObserver>();\n\n  const getTargetElement = useCallback((): HTMLElement | undefined => {\n    if (!tooltipChild.current || !tooltipChild.current.parentElement) {\n      return undefined;\n    }\n    return tooltipChild.current.parentElement;\n  }, [tooltipChild]);\n\n  const checkTextOverflow = useCallback(() => {\n    const overflowElement = getTargetElement();\n    const isTextOverflow = !!overflowElement && hasOverflow(overflowElement);\n    if (isTextOverflow !== textOverflow) {\n      setTextOverflow(isTextOverflow);\n    }\n  }, [getTargetElement, textOverflow, setTextOverflow]);\n\n  useEffect(() => {\n    checkTextOverflow();\n  }, [checkTextOverflow]);\n\n  useEffect(() => {\n    // setup part executed only when the component mounts/updates\n    const overflowElement = getTargetElement();\n    if (window.ResizeObserver && overflowElement) {\n      resizeObserver.current = new window.ResizeObserver(async.debounce(checkTextOverflow, 500));\n      resizeObserver.current.observe(overflowElement);\n    }\n    // cleanup part executed only when the component unmounts\n    return () => {\n      resizeObserver.current?.disconnect();\n      async.dispose();\n    };\n  }, [async, checkTextOverflow, getTargetElement]);\n\n  return (\n    <div className={props.className}>\n      <Tooltip content={props.content} relationship=\"description\">\n        <span {...getAccessibleDataObject(props.accessibilityData)} ref={tooltipChild} data-is-focusable={textOverflow}>\n          {props.content}\n        </span>\n      </Tooltip>\n    </div>\n  );\n});\n"],"names":["React","useCallback","useState","useEffect","useRef","Tooltip","hasOverflow","getAccessibleDataObject","Async","FocusableTooltipText","forwardRef","props","forwardedRef","textOverflow","setTextOverflow","tooltipChild","async","current","resizeObserver","getTargetElement","parentElement","undefined","checkTextOverflow","overflowElement","isTextOverflow","window","ResizeObserver","debounce","observe","disconnect","dispose","div","className","content","relationship","span","accessibilityData","ref","data-is-focusable"],"mappings":"AAAA;;;;;+BAuBaS;;;;;;;iEApBU,QAAQ;8BAEP,0BAA0B;+BAEtB,mBAAmB;uBACP,UAAU;4BAE5B,gBAAgB;AAa/B,6BAAMA,WAAAA,GAA4ET,OAAMU,UAAU,CAGvG,CAACC,OAAOC;IACR,MAAM,CAACC,cAAcC,gBAAgB,OAAGZ,eAAAA,EAAS;IACjD,MAAMa,mBAAeX,aAAAA,EAAwB;IAC7C,MAAMY,YAAQZ,aAAAA,EAAO,IAAII,iBAAAA,IAASS,OAAO;IACzC,MAAMC,qBAAiBd,aAAAA;IAEvB,MAAMe,uBAAmBlB,kBAAAA,EAAY;QACnC,IAAI,CAACc,aAAaE,OAAO,IAAI,CAACF,aAAaE,OAAO,CAACG,aAAa,EAAE;YAChE,OAAOC;QACT;QACA,OAAON,aAAaE,OAAO,CAACG,aAAa;IAC3C,GAAG;QAACL;KAAa;IAEjB,MAAMO,wBAAoBrB,kBAAAA,EAAY;QACpC,MAAMsB,kBAAkBJ;QACxB,MAAMK,iBAAiB,CAAC,CAACD,uBAAmBjB,0BAAAA,EAAYiB;QACxD,IAAIC,mBAAmBX,cAAc;YACnCC,gBAAgBU;QAClB;IACF,GAAG;QAACL;QAAkBN;QAAcC;KAAgB;QAEpDX,gBAAAA,EAAU;QACRmB;IACF,GAAG;QAACA;KAAkB;QAEtBnB,gBAAAA,EAAU;QACR,6DAA6D;QAC7D,MAAMoB,kBAAkBJ;QACxB,IAAIM,OAAOC,cAAc,IAAIH,iBAAiB;YAC5CL,eAAeD,OAAO,GAAG,IAAIQ,OAAOC,cAAc,CAACV,MAAMW,QAAQ,CAACL,mBAAmB;YACrFJ,eAAeD,OAAO,CAACW,OAAO,CAACL;QACjC;QACA,yDAAyD;QACzD,OAAO;gBACLL;YAAAA,2BAAAA,eAAeD,OAAAA,AAAO,MAAA,QAAtBC,4BAAAA,KAAAA,IAAAA,KAAAA,IAAAA,wBAAwBW,UAAU;YAClCb,MAAMc,OAAO;QACf;IACF,GAAG;QAACd;QAAOM;QAAmBH;KAAiB;IAE/C,OAAA,WAAA,GACE,OAAA,aAAA,CAACY,OAAAA;QAAIC,WAAWrB,MAAMqB,SAAS;qBAC7B,OAAA,aAAA,CAAC3B,qBAAAA,EAAAA;QAAQ4B,SAAStB,MAAMsB,OAAO;QAAEC,cAAa;qBAC5C,OAAA,aAAA,CAACC,QAAAA;QAAM,OAAG5B,8BAAAA,EAAwBI,MAAMyB,iBAAiB,CAAC;QAAEC,KAAKtB;QAAcuB,qBAAmBzB;OAC/FF,MAAMsB,OAAO;AAKxB,GAAG"}