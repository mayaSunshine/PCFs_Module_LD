{"version":3,"sources":["../src/utilities/colors.ts"],"sourcesContent":["import { tokens } from '@fluentui/react-theme';\nimport { rgb as d3Rgb } from 'd3-color';\n\nexport const DataVizPalette = {\n  color1: 'qualitative.1',\n  color2: 'qualitative.2',\n  color3: 'qualitative.3',\n  color4: 'qualitative.4',\n  color5: 'qualitative.5',\n  color6: 'qualitative.6',\n  color7: 'qualitative.7',\n  color8: 'qualitative.8',\n  color9: 'qualitative.9',\n  color10: 'qualitative.10',\n  color11: 'qualitative.11',\n  color12: 'qualitative.12',\n  color13: 'qualitative.13',\n  color14: 'qualitative.14',\n  color15: 'qualitative.15',\n  color16: 'qualitative.16',\n  color17: 'qualitative.17',\n  color18: 'qualitative.18',\n  color19: 'qualitative.19',\n  color20: 'qualitative.20',\n  color21: 'qualitative.21',\n  color22: 'qualitative.22',\n  color23: 'qualitative.23',\n  color24: 'qualitative.24',\n  color25: 'qualitative.25',\n  color26: 'qualitative.26',\n  color27: 'qualitative.27',\n  color28: 'qualitative.28',\n  color29: 'qualitative.29',\n  color30: 'qualitative.30',\n  color31: 'qualitative.31',\n  color32: 'qualitative.32',\n  color33: 'qualitative.33',\n  color34: 'qualitative.34',\n  color35: 'qualitative.35',\n  color36: 'qualitative.36',\n  color37: 'qualitative.37',\n  color38: 'qualitative.38',\n  color39: 'qualitative.39',\n  color40: 'qualitative.40',\n  info: 'semantic.info',\n  disabled: 'semantic.disabled',\n  highError: 'semantic.highError',\n  error: 'semantic.error',\n  warning: 'semantic.warning',\n  success: 'semantic.success',\n  highSuccess: 'semantic.highSuccess',\n};\n\n/**\n * Key: Color code.\n * Value:\n * Index 0 - Default color / Color for light theme,\n * Index 1 - Color for dark theme\n */\ntype Palette = { [key: string]: string[] };\n\nconst QualitativePalette: Palette = {\n  '1': ['#637cef'], // [cornflower.tint10],\n  '2': ['#e3008c'], // [hotPink.primary],\n  '3': ['#2aa0a4'], // [teal.tint20],\n  '4': ['#9373c0'], // [orchid.tint10],\n  '5': ['#13a10e'], // [lightGreen.primary],\n  '6': ['#3a96dd'], // [lightBlue.primary],\n  '7': ['#ca5010'], // [pumpkin.primary],\n  '8': ['#57811b'], // [lime.shade20],\n  '9': ['#b146c2'], // [lilac.primary],\n  '10': ['#ae8c00'], // [gold.shade10],\n  '11': ['#3c51b4', '#93a4f4'], // [cornflower.shade20, cornflower.tint30],\n  '12': ['#ad006a', '#ee5fb7'], // [hotPink.shade20, hotPink.tint30],\n  '13': ['#026467', '#4cb4b7'], // [teal.shade20, teal.tint30],\n  '14': ['#674c8c', '#a083c9'], // [orchid.shade20, orchid.tint20],\n  '15': ['#0e7a0b', '#27ac22'], // [lightGreen.shade20, lightGreen.tint10],\n  '16': ['#2c72a8', '#4fa1e1'], // [lightBlue.shade20, lightBlue.tint10],\n  '17': ['#9a3d0c', '#d77440'], // [pumpkin.shade20, pumpkin.tint20],\n  '18': ['#405f14', '#73aa24'], // [lime.shade30, lime.primary],\n  '19': ['#863593', '#c36bd1'], // [lilac.shade20, lilac.tint20],\n  '20': ['#6d5700', '#d0b232'], // [gold.shade30, gold.tint20],\n  '21': ['#4f6bed'], // [cornflower.primary],\n  '22': ['#ea38a6'], // [hotPink.tint20],\n  '23': ['#038387'], // [teal.primary],\n  '24': ['#8764b8'], // [orchid.primary],\n  '25': ['#11910d'], // [lightGreen.shade10],\n  '26': ['#3487c7'], // [lightBlue.shade10],\n  '27': ['#d06228'], // [pumpkin.tint10],\n  '28': ['#689920'], // [lime.shade10],\n  '29': ['#ba58c9'], // [lilac.tint10],\n  '30': ['#937700', '#c19c00'], // [gold.shade20, gold.primary],\n  '31': ['#2c3c85', '#c8d1fa'], // [cornflower.shade30, cornflower.tint40],\n  '32': ['#7f004e', '#f7adda'], // [hotPink.shade30, hotPink.tint40],\n  '33': ['#02494c', '#9bd9db'], // [teal.shade30, teal.tint40],\n  '34': ['#4c3867', '#b29ad4'], // [orchid.shade30, orchid.tint30],\n  '35': ['#0b5a08', '#a7e3a5'], // [lightGreen.shade30, lightGreen.tint40],\n  '36': ['#20547c', '#83bdeb'], // [lightBlue.shade30, lightBlue.tint30],\n  '37': ['#712d09', '#df8e64'], // [pumpkin.shade30, pumpkin.tint30],\n  '38': ['#23330b', '#a4cc6c'], // [lime.shade40, lime.tint30],\n  '39': ['#63276d', '#cf87da'], // [lilac.shade30, lilac.tint30],\n  '40': ['#3a2f00', '#dac157'], // [gold.shade40, gold.tint30],\n};\n\nconst SemanticPalette: Palette = {\n  info: ['#015cda'],\n  disabled: ['#dbdbdb', '#4d4d4d'], // [grey[86], grey[30]]\n  highError: ['#6e0811', '#cc2635'], // [cranberry.shade30, cranberry.tint10],\n  error: ['#c50f1f', '#dc626d'], // [cranberry.primary, cranberry.tint30],\n  warning: ['#f7630c', '#f87528'], // [orange.primary, orange.tint10],\n  success: ['#107c10', '#54b054'], // [green.primary, green.tint30],\n  highSuccess: ['#094509', '#218c21'], // [green.shade30, green.tint10],\n};\n\nconst Colors: { [key: string]: Palette } = {\n  qualitative: QualitativePalette,\n  semantic: SemanticPalette,\n};\n\nconst QUALITATIVE_COLORS = Object.values(QualitativePalette);\nconst TOKENS = Object.values(DataVizPalette);\n\nconst getThemeSpecificColor = (colors: string[], isDarkTheme: boolean): string => {\n  if (colors.length === 0) {\n    return '';\n  }\n  const colorIdx = Number(isDarkTheme);\n  if (colorIdx < colors.length) {\n    return colors[colorIdx];\n  }\n  return colors[0];\n};\n\nexport const getNextColor = (index: number, offset: number = 0, isDarkTheme: boolean = false): string => {\n  const colors = QUALITATIVE_COLORS[(index + offset) % QUALITATIVE_COLORS.length];\n  return getThemeSpecificColor(colors, isDarkTheme);\n};\n\nexport const getColorFromToken = (token: string, isDarkTheme: boolean = false): string => {\n  if (TOKENS.indexOf(token) >= 0) {\n    const [paletteName, colorCode] = token.split('.');\n    const colors = Colors[paletteName][colorCode];\n    return getThemeSpecificColor(colors, isDarkTheme);\n  }\n  return token;\n};\n\n//For reference to how these numbers are calculated, refer https://www.w3.org/TR/WCAG/#dfn-contrast-ratio\nconst rgbLrgb1 = (v: number): number => {\n  return v <= 0.04045 ? v / 12.92 : ((v + 0.055) / 1.055) ** 2.4;\n};\n\nconst rgbLrgb = ({ r, g, b }: { r: number; g: number; b: number }): { r: number; g: number; b: number } => {\n  return {\n    r: rgbLrgb1(r / 255),\n    g: rgbLrgb1(g / 255),\n    b: rgbLrgb1(b / 255),\n  };\n};\n\nconst lrgbLuminance = ({ r, g, b }: { r: number; g: number; b: number }): number => {\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\n\nexport const getColorContrast = (c1: string, c2: string): number => {\n  const l1 = lrgbLuminance(rgbLrgb(d3Rgb(c1)));\n  const l2 = lrgbLuminance(rgbLrgb(d3Rgb(c2)));\n  return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n};\n\nexport const getInvertedTextColor = (color: string, isDarkTheme: boolean = false): string => {\n  return color === tokens.colorNeutralForeground1 ? tokens.colorNeutralBackground1 : tokens.colorNeutralForeground1;\n};\n\nexport function getContrastTextColor(backgroundColor: string, isDarkTheme: boolean = false): string {\n  let textColor = tokens.colorNeutralForeground1;\n  const contrastRatio = getColorContrast(textColor, backgroundColor);\n  if (contrastRatio < 3) {\n    textColor = getInvertedTextColor(textColor, isDarkTheme);\n  }\n  return textColor;\n}\n"],"names":["tokens","rgb","d3Rgb","DataVizPalette","color1","color2","color3","color4","color5","color6","color7","color8","color9","color10","color11","color12","color13","color14","color15","color16","color17","color18","color19","color20","color21","color22","color23","color24","color25","color26","color27","color28","color29","color30","color31","color32","color33","color34","color35","color36","color37","color38","color39","color40","info","disabled","highError","error","warning","success","highSuccess","QualitativePalette","SemanticPalette","Colors","qualitative","semantic","QUALITATIVE_COLORS","Object","values","TOKENS","getThemeSpecificColor","colors","isDarkTheme","length","colorIdx","Number","getNextColor","index","offset","getColorFromToken","token","indexOf","paletteName","colorCode","split","rgbLrgb1","v","rgbLrgb","r","g","b","lrgbLuminance","getColorContrast","c1","c2","l1","l2","Math","max","min","getInvertedTextColor","color","colorNeutralForeground1","colorNeutralBackground1","getContrastTextColor","backgroundColor","textColor","contrastRatio"],"mappings":";;;;;;;;;;;IAGaG,cAAAA;;;IAiKA+E,gBAAAA;;;qBA1BAb;eAAAA;;wBAoCGyB;eAAAA;;wBAJHJ;;;gBArCAxB;;;;4BArIU,wBAAwB;yBAClB,WAAW;AAEjC,uBAAuB;IAC5B9D,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,MAAM;IACNC,UAAU;IACVC,WAAW;IACXC,OAAO;IACPC,SAAS;IACTC,SAAS;IACTC,aAAa;AACf,EAAE;AAUF,MAAMC,qBAA8B;IAClC,KAAK;QAAC;KAAU;IAChB,KAAK;QAAC;KAAU;IAChB,KAAK;QAAC;KAAU;IAChB,KAAK;QAAC;KAAU;IAChB,KAAK;QAAC;KAAU;IAChB,KAAK;QAAC;KAAU;IAChB,KAAK;QAAC;KAAU;IAChB,KAAK;QAAC;KAAU;IAChB,KAAK;QAAC;KAAU;IAChB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;KAAU;IACjB,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;IAC5B,MAAM;QAAC;QAAW;KAAU;AAC9B;AAEA,MAAMC,kBAA2B;IAC/BR,MAAM;QAAC;KAAU;IACjBC,UAAU;QAAC;QAAW;KAAU;IAChCC,WAAW;QAAC;QAAW;KAAU;IACjCC,OAAO;QAAC;QAAW;KAAU;IAC7BC,SAAS;QAAC;QAAW;KAAU;IAC/BC,SAAS;QAAC;QAAW;KAAU;IAC/BC,aAAa;QAAC;QAAW;KAAU;AACrC;AAEA,MAAMG,SAAqC;IACzCC,aAAaH;IACbI,UAAUH;AACZ;AAEA,MAAMI,qBAAqBC,OAAOC,MAAM,CAACP;AACzC,MAAMQ,SAASF,OAAOC,MAAM,CAACvD;AAE7B,MAAMyD,wBAAwB,CAACC,QAAkBC;IAC/C,IAAID,OAAOE,MAAM,KAAK,GAAG;QACvB,OAAO;IACT;IACA,MAAMC,WAAWC,OAAOH;IACxB,IAAIE,WAAWH,OAAOE,MAAM,EAAE;QAC5B,OAAOF,MAAM,CAACG,SAAS;IACzB;IACA,OAAOH,MAAM,CAAC,EAAE;AAClB;AAEO,MAAMK,eAAe,CAACC,OAAeC,SAAiB,CAAC,EAAEN,cAAuB,KAAK;IAC1F,MAAMD,SAASL,kBAAkB,CAAEW,CAAAA,QAAQC,MAAAA,CAAK,GAAKZ,mBAAmBO,MAAM,CAAC;IAC/E,OAAOH,sBAAsBC,QAAQC;AACvC,EAAE;AAEK,0BAA0B,CAACQ,OAAeR,cAAuB,KAAK;IAC3E,IAAIH,OAAOY,OAAO,CAACD,UAAU,GAAG;QAC9B,MAAM,CAACE,aAAaC,UAAU,GAAGH,MAAMI,KAAK,CAAC;QAC7C,MAAMb,SAASR,MAAM,CAACmB,YAAY,CAACC,UAAU;QAC7C,OAAOb,sBAAsBC,QAAQC;IACvC;IACA,OAAOQ;AACT,EAAE;AAEF,yGAAyG;AACzG,MAAMK,WAAW,CAACC;IAChB,OAAOA,KAAK,UAAUA,IAAI,QAAS,CAACA,CAAAA,IAAI,KAAA,CAAI,GAAK,KAAA,CAAI,IAAM;AAC7D;AAEA,MAAMC,UAAU,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAuC;IAC/D,OAAO;QACLF,GAAGH,SAASG,IAAI;QAChBC,GAAGJ,SAASI,IAAI;QAChBC,GAAGL,SAASK,IAAI;IAClB;AACF;AAEA,MAAMC,gBAAgB,CAAC,EAAEH,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAuC;IACrE,OAAO,SAASF,IAAI,SAASC,IAAI,SAASC;AAC5C;AAEO,yBAAyB,CAACG,IAAYC;IAC3C,MAAMC,KAAKJ,cAAcJ,YAAQ3E,YAAAA,EAAMiF;IACvC,MAAMG,KAAKL,cAAcJ,YAAQ3E,YAAAA,EAAMkF;IACvC,OAAQG,CAAAA,KAAKC,GAAG,CAACH,IAAIC,MAAM,IAAA,CAAG,IAAMC,KAAKE,GAAG,CAACJ,IAAIC,MAAM,IAAA,CAAG;AAC5D,EAAE;AAEK,MAAMI,uBAAuB,CAACC,OAAe7B,cAAuB,KAAK;IAC9E,OAAO6B,UAAU3F,kBAAAA,CAAO4F,uBAAuB,GAAG5F,kBAAAA,CAAO6F,uBAAuB,GAAG7F,kBAAAA,CAAO4F,uBAAuB;AACnH,EAAE;AAEK,8BAA8BG,eAAuB,EAAEjC,cAAuB,KAAK;IACxF,IAAIkC,YAAYhG,kBAAAA,CAAO4F,uBAAuB;IAC9C,MAAMK,gBAAgBf,iBAAiBc,WAAWD;IAClD,IAAIE,gBAAgB,GAAG;QACrBD,YAAYN,qBAAqBM,WAAWlC;IAC9C;IACA,OAAOkC;AACT"}