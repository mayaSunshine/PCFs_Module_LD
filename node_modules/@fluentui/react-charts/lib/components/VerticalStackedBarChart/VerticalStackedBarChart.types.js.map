{"version":3,"sources":["../src/components/VerticalStackedBarChart/VerticalStackedBarChart.types.ts"],"sourcesContent":["import * as React from 'react';\n//import { ICalloutProps } from '@fluentui/react/lib/Callout';\nimport { RenderFunction } from '../../utilities/index';\nimport {\n  CartesianChartProps,\n  CartesianChartStyleProps,\n  CartesianChartStyles,\n  LineChartLineOptions,\n  VerticalStackedChartProps,\n  VSChartDataPoint,\n} from '../../index';\n\n/**\n * Vertical Stacked Bar Chart properties\n * {@docCategory VerticalStackedBarChart}\n */\nexport interface VerticalStackedBarChartProps extends CartesianChartProps {\n  /**\n   * Data to render in the chart.\n   */\n  data: VerticalStackedChartProps[];\n\n  /**\n   * Width of each bar in the chart. When set to `undefined` or `'default'`, the bar width defaults to 16px,\n   * which may decrease to prevent overlap. When set to `'auto'`, the bar width is calculated from padding values.\n   */\n  barWidth?: number | 'default' | 'auto';\n\n  /**\n   * Gap (max) between bars in a stack. When non-zero, the bars in a stack will\n   * be separated by gaps. The actual size of each gap is calculated as 20% of\n   * the height of that stack, with a minimum size of 1px and a maximum given by\n   * this prop.\n   * @default 0\n   */\n  barGapMax?: number;\n\n  /**\n   * Corner radius of the bars\n   * @default 0\n   */\n  barCornerRadius?: number;\n\n  /**\n   * The minimum height of a bar; bars below this height will be displayed at\n   * this height. Note that this setting will result in the height of these data\n   * points not being to scale.\n   * @default 0\n   */\n  barMinimumHeight?: number;\n\n  /**\n   * chart title for the chart\n   */\n  chartTitle?: string;\n\n  /**\n   * To display multi stack callout or single callout\n   * @default flase\n   */\n  isCalloutForStack?: boolean;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: Partial<VerticalStackedBarChartStyles>;\n\n  /**\n   * Define a custom callout renderer for a stack; default is to render per data point\n   */\n  onRenderCalloutPerStack?: RenderFunction<VerticalStackedChartProps>;\n\n  /**\n   * Define a custom callout renderer for a data point\n   */\n  onRenderCalloutPerDataPoint?: RenderFunction<VSChartDataPoint>;\n\n  /**\n   * yMinValue is supported for bar charts that has only lines\n   */\n  yMinValue?: number | undefined;\n\n  /**\n   * Allow hover actions on the legend\n   * @default true\n   */\n  allowHoverOnLegend?: boolean;\n\n  /**\n   * Click handler for bars; type of data is dependant on isCalloutForStack\n   */\n  onBarClick?: (event: React.MouseEvent<SVGElement>, data: VerticalStackedChartProps | VSChartDataPoint) => void;\n\n  /**\n   * The prop used to define the culture to localized the numbers\n   */\n  culture?: string;\n\n  /**\n   * it's padding between bar's or lines in the graph\n   */\n  xAxisPadding?: number;\n\n  /**\n   * options for the line drawn\n   */\n  lineOptions?: LineChartLineOptions;\n\n  /**\n   * Prop to hide the bar labels\n   * @default false\n   */\n  hideLabels?: boolean;\n\n  /**\n   * Maximum width of a bar, in pixels.\n   * @default 24\n   */\n  maxBarWidth?: number;\n\n  /**\n   * Padding between bars as a fraction of the [step](https://d3js.org/d3-scale/band#band_step).\n   * Takes a number in the range [0, 1]. Only applicable to string x-axis.\n   * @default 2/3\n   */\n  xAxisInnerPadding?: number;\n\n  /**\n   * Padding before the first bar and after the last bar as a fraction of\n   * the [step](https://d3js.org/d3-scale/band#band_step). Takes a number in the range [0, 1].\n   * Only applicable to string x-axis.\n   */\n  xAxisOuterPadding?: number;\n\n  /**\n   * @default false\n   * The prop used to enable gradient fill color for the chart.\n   */\n  enableGradient?: boolean;\n\n  /**\n   * @default false\n   * The prop used to enable rounded corners for the chart.\n   */\n  roundCorners?: boolean;\n\n  /**\n   * Specifies the mode of the chart.\n   * @default 'default'\n   */\n  mode?: 'default' | 'plotly';\n\n  /**\n   *@default false\n   *Used for to elipse y axis labes and show tooltip on x axis labels\n   */\n  showYAxisLablesTooltip?: boolean;\n\n  /**\n   *@default false\n   *Used for showing complete y axis lables   */\n  showYAxisLables?: boolean;\n}\n\n/**\n * Vertical Stacked Bar Chart style properties\n * {@docCategory VerticalStackedBarChart}\n */\nexport interface VerticalStackedBarChartStyleProps extends CartesianChartStyleProps {}\n\n/**\n * Vertical Stacked Bar Chart styles\n * {@docCategory VerticalStackedBarChart}\n */\nexport interface VerticalStackedBarChartStyles extends CartesianChartStyles {\n  /**\n   * Style to change the opacity of bars in dataviz when we hover on a single bar or legends\n   */\n  opacityChangeOnHover?: string;\n\n  /**\n   * Style for the bar labels\n   */\n  barLabel: string;\n}\n"],"names":["React"],"mappings":"AAAA,YAAYA,WAAW,QAAQ"}