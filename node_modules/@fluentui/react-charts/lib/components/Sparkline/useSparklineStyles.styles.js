'use client';

import { __styles, mergeClasses } from '@griffel/react';
import { tokens, typographyStyles } from '@fluentui/react-theme';
/**
 * @internal
 */
export const sparklineClassNames = {
  inlineBlock: 'fui-sprk__inlineBlock',
  valueText: 'fui-sprk__valueText'
};
/**
 * Base Styles
 */
const useStyles = /*#__PURE__*/__styles({
  inlineBlock: {
    mc9l5x: "f1w7gpdv"
  },
  valueText: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    Bkfmm31: "fhuob2q",
    Bvjb7m6: "fhv2zbx"
  }
}, {
  d: [".f1w7gpdv{display:inline;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fhuob2q{fill:var(--colorNeutralForeground1);}", ".fhv2zbx{forced-color-adjust:auto;}"]
});
/**
 * Apply styling to the Carousel slots based on the state
 */
export const useSparklineStyles = props => {
  var _props_styles, _props_styles1;
  const baseStyles = useStyles();
  return {
    inlineBlock: mergeClasses(sparklineClassNames.inlineBlock, baseStyles.inlineBlock, (_props_styles = props.styles) === null || _props_styles === void 0 ? void 0 : _props_styles.inlineBlock),
    valueText: mergeClasses(sparklineClassNames.valueText, baseStyles.valueText, (_props_styles1 = props.styles) === null || _props_styles1 === void 0 ? void 0 : _props_styles1.valueText)
  };
};