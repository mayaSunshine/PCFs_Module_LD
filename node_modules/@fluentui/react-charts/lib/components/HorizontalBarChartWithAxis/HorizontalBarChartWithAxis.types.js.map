{"version":3,"sources":["../src/components/HorizontalBarChartWithAxis/HorizontalBarChartWithAxis.types.ts"],"sourcesContent":["import { RenderFunction } from '../../utilities/index';\nimport {\n  CartesianChartProps,\n  CartesianChartStyleProps,\n  CartesianChartStyles,\n  HorizontalBarChartWithAxisDataPoint,\n} from '../../index';\n\n/**\n * Horizontal Bar Chart with Axis properties\n * {@docCategory HorizontalBarChartWithAxis}\n */\nexport interface HorizontalBarChartWithAxisProps extends CartesianChartProps {\n  /**\n   * Data to render in the chart.\n   */\n  data?: HorizontalBarChartWithAxisDataPoint[];\n\n  /**\n   * Define a custom callout renderer for a data point.\n   */\n  onRenderCalloutPerDataPoint?: RenderFunction<HorizontalBarChartWithAxisDataPoint>;\n\n  /**\n   * Width of each bar in the chart.\n   */\n  barHeight?: number;\n\n  /**\n   * Colors from which to select the color of each bar.\n   */\n  colors?: string[];\n\n  /**\n   * chart title for the chart\n   */\n  chartTitle?: string;\n\n  /**\n   * This prop makes sure that all the bars are of same color.\n   * it will take the first color from the array of colors in\n   * prop `colors` or if  `colors` prop is not given then default color is  palette.blueLight\n   * @default false\n   */\n  useSingleColor?: boolean;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: HorizontalBarChartWithAxisStyles;\n\n  /**\n   * The prop used to define the culture to localized the numbers\n   */\n  culture?: string;\n\n  /**\n   * it's padding between bar's or lines in the graph\n   */\n  yAxisPadding?: number;\n\n  /**\n   *@default false\n   *Used for to elipse y axis labes and show tooltip on x axis labels\n   */\n  showYAxisLablesTooltip?: boolean;\n\n  /**\n   *@default false\n   *Used for showing complete y axis lables   */\n  showYAxisLables?: boolean;\n\n  /**\n   * @default false\n   * The prop used to enable gradient fill color for the chart.\n   */\n  enableGradient?: boolean;\n\n  /**\n   * @default false\n   * The prop used to enable rounded corners for the bars.\n   */\n  roundCorners?: boolean;\n}\n\n/**\n * Horizontal Bar Chart with Axis style properties\n * {@docCategory HorizontalBarChartWithAxis}\n */\nexport interface HorizontalBarChartWithAxisStyleProps extends CartesianChartStyleProps {\n  /**\n   * color of the datapoint legend\n   */\n  legendColor?: string;\n}\n\n/**\n * Horizontal Bar Chart with Axis styles\n * {@docCategory HorizontalBarChartWithAxis}\n */\nexport interface HorizontalBarChartWithAxisStyles extends CartesianChartStyles {\n  /**\n   * Style for the chart label.\n   *\n   */\n  chartLabel?: string;\n\n  /**\n   * Style for the line representing the domain of the x-axis.\n   *\n   */\n  xAxisDomain?: string;\n\n  /**\n   * Style for the lines representing the ticks along the x-axis.\n   *\n   */\n  xAxisTicks?: string;\n\n  /**\n   * Style for the text labeling each tick along the x-axis.\n   *\n   */\n  xAxisText?: string;\n\n  /**\n   * Style for the line representing the domain of the y-axis.\n   *\n   */\n  yAxisDomain?: string;\n\n  /**\n   * Style for the lines representing the ticks along the y-axis.\n   *\n   */\n  yAxisTicks?: string;\n\n  /**\n   * Style for the text labeling each tick along the y-axis.\n   *\n   */\n  yAxisText?: string;\n\n  /**\n   * Style to change the opacity of bars in dataviz when we hover on a single bar or legends\n   */\n  opacityChangeOnHover: string;\n}\n"],"names":[],"mappings":"AAgGA;;;CAGC,GACD,WA+CC"}