{"version":3,"sources":["../src/components/DeclarativeChart/PlotlyColorAdapter.ts"],"sourcesContent":["import * as React from 'react';\nimport { color as d3Color } from 'd3-color';\nimport type { PieColors, Color, PlotData, Layout } from '@fluentui/chart-utilities';\nimport { isArrayOrTypedArray } from '@fluentui/chart-utilities';\nimport { areArraysEqual } from '../../utilities/utilities';\nimport { DataVizPalette, getColorFromToken, getNextColor } from '../../utilities/colors';\nimport { scaleLinear as d3ScaleLinear } from 'd3-scale';\n\ntype PlotlyColorway = 'plotly' | 'd3' | 'others';\n\n// The color sequences in plotly express are defined here:\n// https://plotly.com/python/discrete-color/#:~:text=Join%20now.-,Color%20Sequences%20in%20Plotly%20Express,-By%20default%2C%20Plotly\nexport type ColorwayType = 'default' | 'builtin' | 'others' | undefined;\n\nconst DEFAULT_PLOTLY_COLORWAY = [\n  '#636efa', //1\n  '#ef553b', //2\n  '#00cc96', //3\n  '#ab63fa', //4\n  '#ffa15a', //5\n  '#19d3f3', //6\n  '#ff6692', //7\n  '#b6e880', //8\n  '#ff97ff', //9\n  '#fecb52', //10\n];\n\n// Default D3 qualitative colorway (Category10), matching Plotly Express px.colors.qualitative.D3\n// Source: https://plotly.com/python/discrete-color/#:~:text=Join%20now.-,Color%20Sequences%20in%20Plotly%20Express,-By%20default%2C%20Plotly\nexport const DEFAULT_D3_COLORWAY = [\n  '#1f77b4', //1\n  '#ff7f0e', //2\n  '#2ca02c', //3\n  '#d62728', //4\n  '#9467bd', //5\n  '#8c564b', //6\n  '#e377c2', //7\n  '#7f7f7f', //8\n  '#bcbd22', //9\n  '#17becf', //10\n];\n\nconst PLOTLY_FLUENTVIZ_COLORWAY_MAPPING = [\n  DataVizPalette.color1, //1\n  DataVizPalette.warning, //2\n  DataVizPalette.color8, //3\n  DataVizPalette.color4, //4\n  DataVizPalette.color7, //5\n  DataVizPalette.color6, //6\n  DataVizPalette.color2, //7\n  DataVizPalette.color5, //8\n  DataVizPalette.color9, //9\n  DataVizPalette.color10, //10\n];\n\n// Mapping from D3 Category10 order to Fluent DataViz tokens (light/dark handled via getColorFromToken)\n// D3: [blue, orange, green, red, purple, brown, pink, gray, olive, cyan]\nexport const D3_FLUENTVIZ_COLORWAY_MAPPING: string[] = [\n  DataVizPalette.color26, // blue -> lightBlue.shade10\n  DataVizPalette.warning, // orange -> semantic warning\n  DataVizPalette.color5, // green -> lightGreen.primary\n  DataVizPalette.error, // red -> semantic error\n  DataVizPalette.color4, // purple -> orchid.tint10\n  DataVizPalette.color17, // brown -> pumpkin.shade20\n  DataVizPalette.color22, // pink -> hotPink.tint20\n  DataVizPalette.disabled, // gray -> semantic disabled\n  DataVizPalette.color10, // olive/yellow-green -> gold.shade10\n  DataVizPalette.color3, // cyan/teal -> teal.tint20\n];\n\nfunction getPlotlyColorway(colorway: string[] | undefined, isDonut: boolean = false): PlotlyColorway {\n  if (!colorway || !isArrayOrTypedArray(colorway)) {\n    return 'others';\n  }\n  const lower = colorway.map(c => c.toLowerCase());\n  if (isDonut && areArraysEqual(lower, D3_FLUENTVIZ_COLORWAY_MAPPING)) {\n    return 'd3';\n  }\n  if (areArraysEqual(lower, DEFAULT_PLOTLY_COLORWAY)) {\n    return 'plotly';\n  }\n  return 'others';\n}\n\nfunction tryMapFluentDataViz(\n  hexColor: string,\n  templateColorway: PlotlyColorway,\n  isDarkTheme?: boolean,\n  isDonut?: boolean,\n): string {\n  if (templateColorway !== 'plotly') {\n    return hexColor;\n  }\n  let defaultColorway: string[] = DEFAULT_PLOTLY_COLORWAY;\n  let defaultMapping: string[] = PLOTLY_FLUENTVIZ_COLORWAY_MAPPING;\n  if (isDonut) {\n    defaultColorway = templateColorway === 'plotly' ? DEFAULT_PLOTLY_COLORWAY : DEFAULT_D3_COLORWAY;\n    defaultMapping = templateColorway === 'plotly' ? PLOTLY_FLUENTVIZ_COLORWAY_MAPPING : D3_FLUENTVIZ_COLORWAY_MAPPING;\n  }\n  const idx = defaultColorway.indexOf(hexColor.toLowerCase());\n  if (idx !== -1) {\n    return getColorFromToken(defaultMapping[idx], !!isDarkTheme);\n  }\n  return hexColor;\n}\n\nexport const getColor = (\n  legendLabel: string,\n  colorMap: React.MutableRefObject<Map<string, string>>,\n  templateColorway: PlotlyColorway,\n  isDarkTheme?: boolean,\n  isDonut?: boolean,\n): string => {\n  if (!colorMap.current.has(legendLabel)) {\n    let nextColor: string;\n    const defaultColorMapping = isDonut\n      ? templateColorway === 'plotly'\n        ? PLOTLY_FLUENTVIZ_COLORWAY_MAPPING\n        : D3_FLUENTVIZ_COLORWAY_MAPPING\n      : PLOTLY_FLUENTVIZ_COLORWAY_MAPPING;\n    if (colorMap.current.size < defaultColorMapping.length) {\n      // Get first 10 colors from plotly-fluentviz colorway mapping\n      nextColor = getColorFromToken(defaultColorMapping[colorMap.current.size], isDarkTheme);\n    } else {\n      nextColor = getNextColor(colorMap.current.size, 0, isDarkTheme);\n    }\n    colorMap.current.set(legendLabel, nextColor);\n    return nextColor;\n  }\n\n  return colorMap.current.get(legendLabel) as string;\n};\n\nexport const getSchemaColors = (\n  colorway: string[] | undefined,\n  colors: PieColors | Color | Color[] | string | null | undefined,\n  colorMap: React.MutableRefObject<Map<string, string>>,\n  isDarkTheme?: boolean,\n  isDonut?: boolean,\n): string[] | string | undefined => {\n  const hexColors: string[] = [];\n  if (!colors) {\n    return undefined;\n  }\n  const templateColorway = getPlotlyColorway(colorway, isDonut);\n  if (isArrayOrTypedArray(colors)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (colors as any[]).forEach((element, index) => {\n      const colorString = element?.toString().trim();\n      const nextFluentColor = getColor(`Label_${index}`, colorMap, templateColorway, isDarkTheme, isDonut);\n      if (colorString) {\n        const parsedColor = d3Color(colorString);\n        hexColors.push(\n          parsedColor ? tryMapFluentDataViz(parsedColor.formatHex(), templateColorway, isDarkTheme) : nextFluentColor,\n        );\n      } else {\n        hexColors.push(nextFluentColor);\n      }\n    });\n  } else if (typeof colors === 'string') {\n    const parsedColor = d3Color(colors);\n    return parsedColor\n      ? tryMapFluentDataViz(parsedColor.formatHex(), templateColorway, isDarkTheme)\n      : getColor('Label_0', colorMap, templateColorway, isDarkTheme, isDonut);\n  }\n  return hexColors;\n};\n\nexport const extractColor = (\n  colorway: string[] | undefined,\n  colorwayType: ColorwayType,\n  colors: PieColors | Color | Color[] | string | null | undefined,\n  colorMap: React.MutableRefObject<Map<string, string>>,\n  isDarkTheme?: boolean,\n  isDonut?: boolean,\n): string | string[] | undefined => {\n  return colorwayType === 'default' && colors\n    ? getSchemaColors(colorway, colors, colorMap, isDarkTheme, isDonut)\n    : undefined;\n};\n\nexport const resolveColor = (\n  extractedColors: string[] | string | null | undefined,\n  index: number,\n  legend: string,\n  colorMap: React.MutableRefObject<Map<string, string>>,\n  colorway: string[] | undefined,\n  isDarkTheme?: boolean,\n  isDonut?: boolean,\n): string => {\n  let color = '';\n  const templateColorway = getPlotlyColorway(colorway, isDonut);\n  if (extractedColors && isArrayOrTypedArray(extractedColors) && extractedColors.length > 0) {\n    color = extractedColors[index % extractedColors.length];\n  } else if (typeof extractedColors === 'string') {\n    color = extractedColors;\n  } else {\n    color = getColor(legend, colorMap, templateColorway, isDarkTheme, isDonut);\n  }\n  return color;\n};\n\nexport const getOpacity = (series: Partial<PlotData>, index: number): number => {\n  return series.marker?.opacity\n    ? isArrayOrTypedArray(series.marker?.opacity)\n      ? (series.marker?.opacity as number[])[index % (series.marker?.opacity as number[]).length]\n      : (series.marker?.opacity as number)\n    : series.opacity ?? 1;\n};\n\nexport const createColorScale = (\n  layout: Partial<Layout> | undefined,\n  series: Partial<PlotData>,\n  currentColorScale: ((value: number) => string) | undefined,\n): ((value: number) => string) | undefined => {\n  if (\n    layout?.coloraxis?.colorscale?.length &&\n    isArrayOrTypedArray(series.marker?.color) &&\n    (series.marker?.color as Color[]).length > 0 &&\n    typeof (series.marker?.color as Color[])?.[0] === 'number'\n  ) {\n    const scale = layout?.coloraxis?.colorscale as Array<[number, string]>;\n    const colorValues = series.marker?.color as number[];\n    const [dMin, dMax] = [\n      layout?.coloraxis?.cmin ?? Math.min(...colorValues),\n      layout?.coloraxis?.cmax ?? Math.max(...colorValues),\n    ];\n\n    // Normalize colorscale domain to actual data domain\n    const scaleDomain = scale.map(([pos]) => dMin + pos * (dMax - dMin));\n    const scaleColors = scale.map(item => item[1]);\n\n    return d3ScaleLinear<string>().domain(scaleDomain).range(scaleColors);\n  }\n  return currentColorScale;\n};\n"],"names":["React","color","d3Color","isArrayOrTypedArray","areArraysEqual","DataVizPalette","getColorFromToken","getNextColor","scaleLinear","d3ScaleLinear","DEFAULT_PLOTLY_COLORWAY","DEFAULT_D3_COLORWAY","PLOTLY_FLUENTVIZ_COLORWAY_MAPPING","color1","warning","color8","color4","color7","color6","color2","color5","color9","color10","D3_FLUENTVIZ_COLORWAY_MAPPING","color26","error","color17","color22","disabled","color3","getPlotlyColorway","colorway","isDonut","lower","map","c","toLowerCase","tryMapFluentDataViz","hexColor","templateColorway","isDarkTheme","defaultColorway","defaultMapping","idx","indexOf","getColor","legendLabel","colorMap","current","has","nextColor","defaultColorMapping","size","length","set","get","getSchemaColors","colors","hexColors","undefined","forEach","element","index","colorString","toString","trim","nextFluentColor","parsedColor","push","formatHex","extractColor","colorwayType","resolveColor","extractedColors","legend","getOpacity","series","marker","opacity","createColorScale","layout","currentColorScale","coloraxis","colorscale","scale","colorValues","dMin","dMax","cmin","Math","min","cmax","max","scaleDomain","pos","scaleColors","item","domain","range"],"mappings":"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"}