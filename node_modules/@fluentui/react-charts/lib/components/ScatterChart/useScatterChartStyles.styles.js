'use client';

import { __styles, mergeClasses } from '@griffel/react';
import { getMarkerLabelStyle, getTooltipStyle } from '../../utilities/index';
/**
 * @internal
 */
export const scatterChartClassNames = {
  tooltip: 'fui-line__tooltip',
  markerLabel: 'fui-line__markerLabel',
  root: 'fui-line__root',
  xAxis: 'fui-line__xAxis',
  yAxis: 'fui-line__yAxis',
  legendContainer: 'fui-line__legendContainer',
  hover: 'fui-line__hover',
  descriptionMessage: 'fui-line__descriptionMessage',
  axisTitle: 'fui-line__axisTitle',
  chartTitle: 'fui-line__chartTitle',
  opacityChangeOnHover: 'fui-line__opacityChangeOnHover',
  shapeStyles: 'fui-line__shapeStyles',
  chartWrapper: 'fui-line__chartWrapper',
  svgTooltip: '',
  chart: '',
  axisAnnotation: ''
};
/**
 * Base Styles
 */
const useStyles = /*#__PURE__*/__styles({
  tooltip: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    z8tnut: "f17mpqex",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "fdvome7",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    qhf8xq: "f1euv43f",
    fsow6f: "f17mccla",
    Bhzewxz: "fr6rvge",
    De3pzq: "fxugw4r",
    Beyfa6y: 0,
    Bbmb7ep: 0,
    Btl43ni: 0,
    B7oj6ja: 0,
    Dimara: "fq9zq91",
    Bkecrkj: "f1aehjj5",
    sj55zd: "f19n0e5"
  },
  markerLabel: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    Bkfmm31: "fhuob2q",
    jzqdnp: "fdxigdc",
    a6j6cd: "folz2wl"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f22iagw{display:flex;}", ".f1vx9l62{flex-direction:column;}", ".f17mpqex{padding-top:var(--spacingHorizontalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".fdvome7{padding-bottom:var(--spacingHorizontalS);}", ".f1euv43f{position:absolute;}", ".f17mccla{text-align:center;}", ".fr6rvge{top:var(--spacingVerticalNone);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", [".fq9zq91{border-radius:var(--borderRadiusSmall);}", {
    p: -1
  }], ".f1aehjj5{pointer-events:none;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fhuob2q{fill:var(--colorNeutralForeground1);}", ".fdxigdc{text-anchor:middle;}"],
  m: [["@media screen and (-ms-high-contrast: active),screen and (forced-colors: active){.folz2wl{fill:CanvasText;}}", {
    m: "screen and (-ms-high-contrast: active), screen and (forced-colors: active)"
  }]]
});
/**
 * Apply styling to the Carousel slots based on the state
 */
export const useScatterChartStyles = props => {
  var _props_styles;
  const baseStyles = useStyles();
  return {
    tooltip: mergeClasses(scatterChartClassNames.tooltip, baseStyles.tooltip /*props.styles?.tooltip*/),
    markerLabel: mergeClasses(scatterChartClassNames.markerLabel, baseStyles.markerLabel, (_props_styles = props.styles) === null || _props_styles === void 0 ? void 0 : _props_styles.markerLabel)
  };
};